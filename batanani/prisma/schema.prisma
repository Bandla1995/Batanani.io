// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//user,hair dressers, appointments

model User {
  id          String   @id @default(cuid())
  clerkId     String   @unique
  email       String   @unique
  firstName   String?
  lastName    String?
  phoneNumber String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  //connecting users to hair dressers
  appointments Appointment[]

  @@map("users")
}

model HairDresser {
  id          String   @id @default(cuid())
  name        String
  email       String   @unique
  phoneNumber String?
  speciality  String?
  bio         String?
  imageUrl    String?
  gender      Gender
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  //connecting hair dressers to users
  appointments Appointment[]

  @@map("hair_dressers")
}

model Appointment {
  id        String            @id @default(cuid())
  date      DateTime
  time      String // store time as string
  duration  Int               @default(30) // duration in minutes
  status    AppointmentStatus @default(PENDING)
  notes     String?
  reason    String?
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt

  // foreign keys
  userId        String
  hairDresserId String

  // relations
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  hairDresser HairDresser @relation(fields: [hairDresserId], references: [id], onDelete: Cascade)

  @@map("appointments")
}

enum Gender {
  MALE
  FEMALE
}

enum AppointmentStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}
